"""
Django settings for bills_road_api project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--z#m!%o4!rnwjo$b^b@fta!7oo7vtr+#elq8k5u7%pa)m+1=dq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

FRONT_ORIGIN = os.environ['FRONT_ORIGIN'] if os.environ.get('FRONT_ORIGIN') else '*'
ALLOWED_HOSTS = [FRONT_ORIGIN]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'places_api.apps.PlacesApiConfig',
    'usr_auth.apps.UsrAuthConfig',
    'rest_framework',
    'rest_framework_simplejwt',
    'django_rest_passwordreset',
    'corsheaders',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

ACCESS_TOKEN_LIFETIME = int(os.environ['ACCESS_TOKEN_LIFETIME']) if os.environ.get('ACCESS_TOKEN_LIFETIME') else 5
REFRESH_TOKEN_LIFETIME = int(os.environ['REFRESH_TOKEN_LIFETIME']) if os.environ.get('REFRESH_TOKEN_LIFETIME') else 1
# print(f'ACCESS_TOKEN_LIFETIME: {ACCESS_TOKEN_LIFETIME}. REFRESH_TOKEN_LIFETIME: {REFRESH_TOKEN_LIFETIME}')
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=ACCESS_TOKEN_LIFETIME),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=REFRESH_TOKEN_LIFETIME),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,
}

CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bills_road_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bills_road_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DB_HOST = os.environ['DB_HOST'] if os.environ.get('DB_HOST') else 'localhost'
DB_PORT = int(os.environ['DB_PORT']) if os.environ.get('DB_PORT') else 27018
DB_USER = os.environ['DB_USER'] if os.environ.get('DB_USER') else 'root'
DB_PASSWORD = os.environ['DB_PASSWORD'] if os.environ.get('DB_PASSWORD') else 'root'
DB_NAME = os.environ['DB_NAME'] if os.environ.get('DB_NAME') else 'bills_road'
# print(DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME, 'DB--------')

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': DB_NAME,
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
            'host': DB_HOST,
            'port': DB_PORT,
            'username': DB_USER,
            'password': DB_PASSWORD,
            'authSource': 'admin',
            'authMechanism': 'SCRAM-SHA-1'
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-co'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuraci√≥n del correo
SEND_EMAIL_USER = os.environ['SEND_EMAIL_USER'] if os.environ.get('SEND_EMAIL_USER') else 'tu2modo@gmail.com'
SEND_EMAIL_PASSWORD = os.environ['SEND_EMAIL_PASSWORD'] if os.environ.get('SEND_EMAIL_PASSWORD') else 'ygkdlesqawjftfcy'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = SEND_EMAIL_USER
EMAIL_HOST_PASSWORD = SEND_EMAIL_PASSWORD
EMAIL_PORT = 587
